"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config # Import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config("DEBUG", default=False, cast=bool)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin", 
    "django.contrib.auth", 
    "django.contrib.contenttypes", 
    "django.contrib.sessions", 
    "django.contrib.messages", 
    "django.contrib.staticfiles", 
    'myapp',  # Replace 'myapp' with your actual app name
    'rest_framework',  # Django REST Framework for API support
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist', # For JWT logout
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "myproject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "myproject.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.mysql",
        "NAME": config("DB_NAME"),
        "USER": config("DB_USER"),
        "PASSWORD": config("DB_PASSWORD"),
        "HOST": config("DB_HOST", default="localhost"), # Added default for host
        "PORT": "3306",                # Default MySQL port
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
LOGIN_REDIRECT_URL='/books/'
LOGIN_URL = 'login' # Add this line


# This setting specifies the URL to redirect to after a successful login.
# It is set to redirect users to the 'list_books' view, which lists all books.
# The LOGOUT_REDIRECT_URL is set to redirect users to the login page after logging out.

# Email Configuration (for password reset and email verification)
# For development, print emails to the console:
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' # Keep this commented or remove if you're fully switching to Brevo

# For production, you would configure SMTP settings like this:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.brevo.com'  # Brevo's SMTP server
EMAIL_PORT = 587                     # Brevo's recommended port for TLS
EMAIL_USE_TLS = True                 # Use TLS encryption
EMAIL_HOST_USER = config("EMAIL_HOST_USER", default='8fdab7001@smtp-brevo.com')  # Your Brevo SMTP login
EMAIL_HOST_PASSWORD = config("EMAIL_HOST_PASSWORD")    # Your Brevo SMTP key
DEFAULT_FROM_EMAIL = 'erdivyakumar@gmail.com' # IMPORTANT: Use an email address verified in your Brevo account


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication', # Strictly JWT for API
        'rest_framework.authentication.SessionAuthentication', # Optional: Session authentication for web clients
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated', # Ensures endpoints are protected by default
    )
}

# Optional: Configure token lifetimes and other settings for simplejwt
# from datetime import timedelta
# SIMPLE_JWT = {
#     "ACCESS_TOKEN_LIFETIME": timedelta(minutes=15), # Default is 5 minutes
#     "REFRESH_TOKEN_LIFETIME": timedelta(days=1),    # Default is 1 day
#     "ROTATE_REFRESH_TOKENS": False,
#     "BLACKLIST_AFTER_ROTATION": False, # Set to True if you want to blacklist old refresh tokens after rotation
#     "UPDATE_LAST_LOGIN": False, # Set to True if you want to update last_login field on User model

#     "ALGORITHM": "HS256", # Default
#     "SIGNING_KEY": SECRET_KEY, # Uses your project's SECRET_KEY by default

#     "AUTH_HEADER_TYPES": ("Bearer",), # Default, e.g., "Authorization: Bearer <token>"
#     "AUTH_HEADER_NAME": "HTTP_AUTHORIZATION", # Default
# }